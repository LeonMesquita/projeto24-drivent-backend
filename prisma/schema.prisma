// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int    @id @default(autoincrement())
  email        String @unique
  password String
  name        String? @unique
  cpf String? @unique
  birth_date DateTime?
  address Address[]
  phone_numbers PhoneNumber[]
  subscriptions Subscription[]
  payments Payment[]
  credit_cards CreditCard[]
  @@map("users")
}


model Address {
  id           Int     @id @default(autoincrement())
  postal_code String
  number Int
  street String
  district String
  city String
  state String
  complement String ?
  user_id Int
  user User? @relation(fields: [user_id], references: [id])
  @@map("addresses")
}


model PhoneNumber {
  id           Int     @id @default(autoincrement())
  number String
  user_id Int?
  users User? @relation(fields: [user_id], references: [id])
  @@map("phone_numbers")
}


model Subscription {
  id           Int     @id @default(autoincrement())
  user_id Int @unique
  payment_id Int? @unique
  event_open Boolean? @default(true)
  user User @relation(fields: [user_id], references: [id])
  payment Payment? @relation(fields: [payment_id], references: [id])
  created_at DateTime @default(now())
  @@map("subscriptions")
}


model Street {
  id           Int     @id @default(autoincrement())
  name         String
  @@map("streets")
}

model District {
  id           Int     @id @default(autoincrement())
  name         String @unique
  @@map("districts")
}

model State {
  id           Int     @id @default(autoincrement())
  name         String @unique
  @@map("states")
}

model City {
  id           Int     @id @default(autoincrement())
  name         String @unique
  @@map("cities")
}


model CreditCard {
  id           Int     @id @default(autoincrement())
  name String
  number String @unique
  expiration_date String
  cvc String
  total_credits Float? @default(1000)
  used_credits Float? @default(0)
  user_id Int
  user User @relation(fields: [user_id], references: [id])
  @@map("credit_cards")
}


model Payment {
  id           Int     @id @default(autoincrement())
  user_id Int
  modality_id Int
  hosting_id Int?
  price Float
  user User @relation(fields: [user_id], references: [id])
  modality Modality @relation(fields: [modality_id], references: [id])
  hosting Hosting? @relation(fields: [hosting_id], references: [id])
  created_at DateTime? @default(now())
  subscription Subscription?
  
  @@map("payments")
}


model Modality {
  id           Int     @id @default(autoincrement())
  name String @unique
  price Float
  payments Payment[]

  @@map("modalities")
}



model Hosting {
  id           Int     @id @default(autoincrement())
  name String @unique
  price Float
  payments Payment[]

  @@map("hostings")
}
